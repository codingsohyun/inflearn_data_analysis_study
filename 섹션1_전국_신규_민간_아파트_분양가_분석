{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOH0oz7HnEnIzgeiCw7/CyL",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/codingsohyun/inflearn_data_analysis_study/blob/main/%EC%84%B9%EC%85%981_%EC%A0%84%EA%B5%AD_%EC%8B%A0%EA%B7%9C_%EB%AF%BC%EA%B0%84_%EC%95%84%ED%8C%8C%ED%8A%B8_%EB%B6%84%EC%96%91%EA%B0%80_%EB%B6%84%EC%84%9D\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://bit.ly/open-data-01-apt-price-input)\n",
        "\n",
        "# 전국 신규 민간 아파트 분양가격 동향\n",
        "\n",
        "2013년부터 최근까지 부동산 가격 변동 추세가 아파트 분양가에도 반영될까요? 공공데이터 포털에 있는 데이터를 Pandas 의 melt, concat, pivot, transpose 와 같은 reshape 기능을 활용해 분석해 봅니다. 그리고 groupby, pivot_table, info, describe, value_counts 등을 통한 데이터 요약과 분석을 해봅니다. 이를 통해 전혀 다른 형태의 두 데이터를 가져와 정제하고 병합하는 과정을 다루는 방법을 알게 됩니다. 전처리 한 결과에 대해 수치형, 범주형 데이터의 차이를 이해하고 다양한 그래프로 시각화를 할 수 있게 됩니다.\n",
        "\n",
        "\n",
        "## 다루는 내용\n",
        "* 공공데이터를 활용해 전혀 다른 두 개의 데이터를 가져와서 전처리 하고 병합하기\n",
        "* 수치형 데이터와 범주형 데이터를 바라보는 시각을 기르기\n",
        "* 데이터의 형식에 따른 다양한 시각화 방법 이해하기\n",
        "\n",
        "## 실습\n",
        "* 공공데이터 다운로드 후 주피터 노트북으로 로드하기\n",
        "* 판다스를 통해 데이터를 요약하고 분석하기\n",
        "* 데이터 전처리와 병합하기\n",
        "* 수치형 데이터와 범주형 데이터 다루기\n",
        "* 막대그래프(bar plot), 선그래프(line plot), 산포도(scatter plot), 상관관계(lm plot), 히트맵, 상자수염그림, swarm plot, 도수분포표, 히스토그램(distplot) 실습하기\n",
        "\n",
        "## 데이터셋\n",
        "* 다운로드 위치 :\n",
        "    * 공공데이터 포털 : https://www.data.go.kr/data/15061057/fileData.do\n",
        "    * 수업과 같은 데이터로 실습하기 위해 아래 링크의 데이터로 실습하는 것을 권장합니다.\n",
        "    * 데이터셋 다운로드(구글드라이브) : http://bit.ly/open-data-set-folder\n",
        "    * 데이터셋 다운로드(드랍박스) : https://bit.ly/dropbox-open-data-set\n",
        "\n",
        "### 전국 평균 분양가격(2013년 9월부터 2015년 8월까지)\n",
        "* 전국 공동주택의 3.3제곱미터당 평균분양가격 데이터를 제공\n",
        "\n",
        "###  주택도시보증공사_전국 평균 분양가격(2019년 12월)\n",
        "* 전국 공동주택의 연도별, 월별, 전용면적별 제곱미터당 평균분양가격 데이터를 제공\n",
        "* 지역별 평균값은 단순 산술평균값이 아닌 가중평균값임"
      ],
      "metadata": {
        "id": "ftgCQPOkj8ut"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "\n",
        "drive.mount(\"/content/gdrive\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tBOpk34lj9j-",
        "outputId": "81ec13ba-bb1c-4b67-d7ad-2f45fc739523"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/gdrive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 파이썬에서 쓸 수 있는 엑셀과도 유사한 판다스 라이브러리를 불러옵니다.\n",
        "import pandas as pd"
      ],
      "metadata": {
        "id": "h7MOmXfokalZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 데이터 로드\n",
        "### 최근 파일 로드\n",
        "공공데이터 포털에서 \"주택도시보증공사_전국 평균 분양가격\"파일을 다운로드 받아 불러옵니다.\n",
        "이 때, 인코딩을 설정을 해주어야 한글이 깨지지 않습니다.\n",
        "보통 엑셀로 저장된 한글의 인코딩은 cp949 혹은 euc-kr로 되어 있습니다.\n",
        "df_last 라는 변수에 최근 분양가 파일을 다운로드 받아 로드합니다.\n",
        "\n",
        "* 한글인코딩 : [‘설믜를 설믜라 못 부르는’ 김설믜씨 “제 이름을 지켜주세요” : 사회일반 : 사회 : 뉴스 : 한겨레](http://www.hani.co.kr/arti/society/society_general/864914.html)\n",
        "\n",
        "데이터를 로드한 뒤 shape를 통해 행과 열의 갯수를 출력합니다."
      ],
      "metadata": {
        "id": "I9Y5jSFOlHcf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 최근 분양가 파일을 로드해서 df_last라는 변수에 담습니다.\n",
        "# UnicodeDecodeError : 인코딩 에러\n",
        "\n",
        "df_last = pd.read_csv(\"./gdrive/MyDrive/Colab Notebooks/[인프런] 공공데이터로 파이썬 데이터 분석 시작하기/주택도시보증공사_전국 평균 분양가격(2019년 12월).csv\", encoding = \"cp949\")\n",
        "df_last.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4eWT2ayslDdO",
        "outputId": "edf165ee-18b7-42e8-803c-444a02d7f4ae"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4335, 5)"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# head 로 파일을 미리보기 합니다.\n",
        "\n",
        "df_last.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "9lKKwbmrl4Oc",
        "outputId": "45781fc1-c80e-4b2a-9fae-dc3d8c63cd05"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  지역명               규모구분    연도   월 분양가격(㎡)\n",
              "0  서울                 전체  2015  10    5841\n",
              "1  서울         전용면적 60㎡이하  2015  10    5652\n",
              "2  서울   전용면적 60㎡초과 85㎡이하  2015  10    5882\n",
              "3  서울  전용면적 85㎡초과 102㎡이하  2015  10    5721\n",
              "4  서울        전용면적 102㎡초과  2015  10    5879"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6df0cae0-28bc-480e-a9c4-861b5b1a4234\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>지역명</th>\n",
              "      <th>규모구분</th>\n",
              "      <th>연도</th>\n",
              "      <th>월</th>\n",
              "      <th>분양가격(㎡)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>서울</td>\n",
              "      <td>전체</td>\n",
              "      <td>2015</td>\n",
              "      <td>10</td>\n",
              "      <td>5841</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>서울</td>\n",
              "      <td>전용면적 60㎡이하</td>\n",
              "      <td>2015</td>\n",
              "      <td>10</td>\n",
              "      <td>5652</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>서울</td>\n",
              "      <td>전용면적 60㎡초과 85㎡이하</td>\n",
              "      <td>2015</td>\n",
              "      <td>10</td>\n",
              "      <td>5882</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>서울</td>\n",
              "      <td>전용면적 85㎡초과 102㎡이하</td>\n",
              "      <td>2015</td>\n",
              "      <td>10</td>\n",
              "      <td>5721</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>서울</td>\n",
              "      <td>전용면적 102㎡초과</td>\n",
              "      <td>2015</td>\n",
              "      <td>10</td>\n",
              "      <td>5879</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6df0cae0-28bc-480e-a9c4-861b5b1a4234')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6df0cae0-28bc-480e-a9c4-861b5b1a4234 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6df0cae0-28bc-480e-a9c4-861b5b1a4234');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-aae1b327-e0a1-4661-b864-32db11d846b3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aae1b327-e0a1-4661-b864-32db11d846b3')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-aae1b327-e0a1-4661-b864-32db11d846b3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# tail 로도 미리보기를 합니다.\n",
        "# NaN 값이 있는 것을 보아, 결측치가 있음을 확인할 수 있음\n",
        "\n",
        "df_last.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "MHoY_H-0mkY3",
        "outputId": "489f42e1-3464-49aa-bcc2-585df6836f2a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     지역명               규모구분    연도   월 분양가격(㎡)\n",
              "4330  제주                 전체  2019  12    3882\n",
              "4331  제주         전용면적 60㎡이하  2019  12     NaN\n",
              "4332  제주   전용면적 60㎡초과 85㎡이하  2019  12    3898\n",
              "4333  제주  전용면적 85㎡초과 102㎡이하  2019  12     NaN\n",
              "4334  제주        전용면적 102㎡초과  2019  12    3601"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1e054827-4817-4cc6-a890-07f22586240d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>지역명</th>\n",
              "      <th>규모구분</th>\n",
              "      <th>연도</th>\n",
              "      <th>월</th>\n",
              "      <th>분양가격(㎡)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4330</th>\n",
              "      <td>제주</td>\n",
              "      <td>전체</td>\n",
              "      <td>2019</td>\n",
              "      <td>12</td>\n",
              "      <td>3882</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4331</th>\n",
              "      <td>제주</td>\n",
              "      <td>전용면적 60㎡이하</td>\n",
              "      <td>2019</td>\n",
              "      <td>12</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4332</th>\n",
              "      <td>제주</td>\n",
              "      <td>전용면적 60㎡초과 85㎡이하</td>\n",
              "      <td>2019</td>\n",
              "      <td>12</td>\n",
              "      <td>3898</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4333</th>\n",
              "      <td>제주</td>\n",
              "      <td>전용면적 85㎡초과 102㎡이하</td>\n",
              "      <td>2019</td>\n",
              "      <td>12</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4334</th>\n",
              "      <td>제주</td>\n",
              "      <td>전용면적 102㎡초과</td>\n",
              "      <td>2019</td>\n",
              "      <td>12</td>\n",
              "      <td>3601</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e054827-4817-4cc6-a890-07f22586240d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1e054827-4817-4cc6-a890-07f22586240d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1e054827-4817-4cc6-a890-07f22586240d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-79239cda-c571-4ce5-a9f9-d377c14a7b8d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-79239cda-c571-4ce5-a9f9-d377c14a7b8d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-79239cda-c571-4ce5-a9f9-d377c14a7b8d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 2015년 부터 최근까지의 데이터 로드\n",
        "전국 평균 분양가격(2013년 9월부터 2015년 8월까지) 파일을 불러옵니다.\n",
        "df_first 라는 변수에 담고 shape로 행과 열의 갯수를 출력합니다."
      ],
      "metadata": {
        "id": "iqare3vtnBaO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 해당되는 폴더 혹은 경로의 파일 목록을 출력해 줍니다.\n",
        "# 로컬 환경을 뒤져보는 것 같음... (확실치 않음 좀따 찾아보기)\n",
        "\n",
        "%ls ./gdrive/MyDrive/Colab Notebooks/[인프런] 공공데이터로 파이썬 데이터 분석 시작하기/"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Uk-UUQScm4c8",
        "outputId": "a5051b09-9edb-430f-e001-2121dc10c616"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ls: cannot access './gdrive/MyDrive/Colab': No such file or directory\n",
            "ls: cannot access 'Notebooks/[인프런]': No such file or directory\n",
            "ls: cannot access '공공데이터로': No such file or directory\n",
            "ls: cannot access '파이썬': No such file or directory\n",
            "ls: cannot access '데이터': No such file or directory\n",
            "ls: cannot access '분석': No such file or directory\n",
            "ls: cannot access '시작하기/': No such file or directory\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# df_first\n",
        "# UnicodeDecodeError : 인코딩 에러\n",
        "\n",
        "df_first = pd.read_csv(\"./gdrive/MyDrive/Colab Notebooks/[인프런] 공공데이터로 파이썬 데이터 분석 시작하기/전국 평균 분양가격(2013년 9월부터 2015년 8월까지).csv\", encoding = \"cp949\")\n",
        "df_first\n",
        "# df_first.shape\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 961
        },
        "id": "AmwpAEpUnLis",
        "outputId": "08bace97-1a27-4828-f0c2-b6f1839000a2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    지역  2013년12월  2014년1월  2014년2월  2014년3월  2014년4월  2014년5월  2014년6월  \\\n",
              "0   서울     18189    17925    17925    18016    18098    19446    18867   \n",
              "1   부산      8111     8111     9078     8965     9402     9501     9453   \n",
              "2   대구      8080     8080     8077     8101     8267     8274     8360   \n",
              "3   인천     10204    10204    10408    10408    10000     9844    10058   \n",
              "4   광주      6098     7326     7611     7346     7346     7523     7659   \n",
              "5   대전      8321     8321     8321     8341     8341     8341     8333   \n",
              "6   울산      8090     8090     8090     8153     8153     8153     8153   \n",
              "7   경기     10855    10855    10791    10784    10876    10646    10266   \n",
              "8   세종      7601     7600     7532     7814     7908     7934     8067   \n",
              "9   강원      6230     6230     6230     6141     6373     6350     6350   \n",
              "10  충북      6589     6589     6611     6625     6678     6598     6587   \n",
              "11  충남      6365     6365     6379     6287     6552     6591     6644   \n",
              "12  전북      6282     6281     5946     5966     6277     6306     6351   \n",
              "13  전남      5678     5678     5678     5696     5736     5656     5609   \n",
              "14  경북      6168     6168     6234     6317     6412     6409     6554   \n",
              "15  경남      6473     6485     6502     6610     6599     6610     6615   \n",
              "16  제주      7674     7900     7900     7900     7900     7900     7914   \n",
              "\n",
              "    2014년7월  2014년8월  ...  2014년11월  2014년12월  2015년1월  2015년2월  2015년3월  \\\n",
              "0     18742    19274  ...     20242     20269    20670    20670    19415   \n",
              "1      9457     9411  ...      9208      9208     9204     9235     9279   \n",
              "2      8360     8370  ...      8439      8253     8327     8416     8441   \n",
              "3      9974     9973  ...     10020     10020    10017     9876     9876   \n",
              "4      7612     7622  ...      7752      7748     7752     7756     7861   \n",
              "5      8333     8333  ...      8067      8067     8067     8067     8067   \n",
              "6      8153     8493  ...      8891      8891     8526     8526     8629   \n",
              "7     10124    10134  ...     10356     10379    10391    10355    10469   \n",
              "8      8067     8141  ...      8592      8560     8560     8560     8555   \n",
              "9      6268     6268  ...      6365      6365     6348     6350     6182   \n",
              "10     6586     6586  ...      6724      6743     6749     6747     6783   \n",
              "11     6805     6914  ...      6940      6989     6976     6980     7161   \n",
              "12     6319     6436  ...      6583      6583     6583     6583     6542   \n",
              "13     5780     5685  ...      5768      5784     5784     5833     5825   \n",
              "14     6556     6563  ...      6881      6989     6992     6953     6997   \n",
              "15     6613     6606  ...      7125      7332     7592     7588     7668   \n",
              "16     7914     7914  ...      7724      7739     7739     7739     7826   \n",
              "\n",
              "    2015년4월  2015년5월  2015년6월  2015년7월  2015년8월  \n",
              "0     18842    18367    18374    18152    18443  \n",
              "1      9327     9345     9515     9559     9581  \n",
              "2      8446     8568     8542     8542     8795  \n",
              "3      9938    10551    10443    10443    10449  \n",
              "4      7914     7877     7881     8089     8231  \n",
              "5      8145     8272     8079     8079     8079  \n",
              "6      9380     9192     9190     9190     9215  \n",
              "7     10684    10685    10573    10518    10573  \n",
              "8      8546     8546     8671     8669     8695  \n",
              "9      6924     6846     6986     7019     7008  \n",
              "10     6790     6805     6682     6601     6603  \n",
              "11     7017     6975     6939     6935     6942  \n",
              "12     6551     6556     6601     6750     6580  \n",
              "13     5940     6050     6243     6286     6289  \n",
              "14     7006     6966     6887     7035     7037  \n",
              "15     7683     7717     7715     7723     7665  \n",
              "16     7285     7285     7343     7343     7343  \n",
              "\n",
              "[17 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e9588259-b3dd-4a14-8bca-8af411a09f1c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>지역</th>\n",
              "      <th>2013년12월</th>\n",
              "      <th>2014년1월</th>\n",
              "      <th>2014년2월</th>\n",
              "      <th>2014년3월</th>\n",
              "      <th>2014년4월</th>\n",
              "      <th>2014년5월</th>\n",
              "      <th>2014년6월</th>\n",
              "      <th>2014년7월</th>\n",
              "      <th>2014년8월</th>\n",
              "      <th>...</th>\n",
              "      <th>2014년11월</th>\n",
              "      <th>2014년12월</th>\n",
              "      <th>2015년1월</th>\n",
              "      <th>2015년2월</th>\n",
              "      <th>2015년3월</th>\n",
              "      <th>2015년4월</th>\n",
              "      <th>2015년5월</th>\n",
              "      <th>2015년6월</th>\n",
              "      <th>2015년7월</th>\n",
              "      <th>2015년8월</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>서울</td>\n",
              "      <td>18189</td>\n",
              "      <td>17925</td>\n",
              "      <td>17925</td>\n",
              "      <td>18016</td>\n",
              "      <td>18098</td>\n",
              "      <td>19446</td>\n",
              "      <td>18867</td>\n",
              "      <td>18742</td>\n",
              "      <td>19274</td>\n",
              "      <td>...</td>\n",
              "      <td>20242</td>\n",
              "      <td>20269</td>\n",
              "      <td>20670</td>\n",
              "      <td>20670</td>\n",
              "      <td>19415</td>\n",
              "      <td>18842</td>\n",
              "      <td>18367</td>\n",
              "      <td>18374</td>\n",
              "      <td>18152</td>\n",
              "      <td>18443</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>부산</td>\n",
              "      <td>8111</td>\n",
              "      <td>8111</td>\n",
              "      <td>9078</td>\n",
              "      <td>8965</td>\n",
              "      <td>9402</td>\n",
              "      <td>9501</td>\n",
              "      <td>9453</td>\n",
              "      <td>9457</td>\n",
              "      <td>9411</td>\n",
              "      <td>...</td>\n",
              "      <td>9208</td>\n",
              "      <td>9208</td>\n",
              "      <td>9204</td>\n",
              "      <td>9235</td>\n",
              "      <td>9279</td>\n",
              "      <td>9327</td>\n",
              "      <td>9345</td>\n",
              "      <td>9515</td>\n",
              "      <td>9559</td>\n",
              "      <td>9581</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>대구</td>\n",
              "      <td>8080</td>\n",
              "      <td>8080</td>\n",
              "      <td>8077</td>\n",
              "      <td>8101</td>\n",
              "      <td>8267</td>\n",
              "      <td>8274</td>\n",
              "      <td>8360</td>\n",
              "      <td>8360</td>\n",
              "      <td>8370</td>\n",
              "      <td>...</td>\n",
              "      <td>8439</td>\n",
              "      <td>8253</td>\n",
              "      <td>8327</td>\n",
              "      <td>8416</td>\n",
              "      <td>8441</td>\n",
              "      <td>8446</td>\n",
              "      <td>8568</td>\n",
              "      <td>8542</td>\n",
              "      <td>8542</td>\n",
              "      <td>8795</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>인천</td>\n",
              "      <td>10204</td>\n",
              "      <td>10204</td>\n",
              "      <td>10408</td>\n",
              "      <td>10408</td>\n",
              "      <td>10000</td>\n",
              "      <td>9844</td>\n",
              "      <td>10058</td>\n",
              "      <td>9974</td>\n",
              "      <td>9973</td>\n",
              "      <td>...</td>\n",
              "      <td>10020</td>\n",
              "      <td>10020</td>\n",
              "      <td>10017</td>\n",
              "      <td>9876</td>\n",
              "      <td>9876</td>\n",
              "      <td>9938</td>\n",
              "      <td>10551</td>\n",
              "      <td>10443</td>\n",
              "      <td>10443</td>\n",
              "      <td>10449</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>광주</td>\n",
              "      <td>6098</td>\n",
              "      <td>7326</td>\n",
              "      <td>7611</td>\n",
              "      <td>7346</td>\n",
              "      <td>7346</td>\n",
              "      <td>7523</td>\n",
              "      <td>7659</td>\n",
              "      <td>7612</td>\n",
              "      <td>7622</td>\n",
              "      <td>...</td>\n",
              "      <td>7752</td>\n",
              "      <td>7748</td>\n",
              "      <td>7752</td>\n",
              "      <td>7756</td>\n",
              "      <td>7861</td>\n",
              "      <td>7914</td>\n",
              "      <td>7877</td>\n",
              "      <td>7881</td>\n",
              "      <td>8089</td>\n",
              "      <td>8231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>대전</td>\n",
              "      <td>8321</td>\n",
              "      <td>8321</td>\n",
              "      <td>8321</td>\n",
              "      <td>8341</td>\n",
              "      <td>8341</td>\n",
              "      <td>8341</td>\n",
              "      <td>8333</td>\n",
              "      <td>8333</td>\n",
              "      <td>8333</td>\n",
              "      <td>...</td>\n",
              "      <td>8067</td>\n",
              "      <td>8067</td>\n",
              "      <td>8067</td>\n",
              "      <td>8067</td>\n",
              "      <td>8067</td>\n",
              "      <td>8145</td>\n",
              "      <td>8272</td>\n",
              "      <td>8079</td>\n",
              "      <td>8079</td>\n",
              "      <td>8079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>울산</td>\n",
              "      <td>8090</td>\n",
              "      <td>8090</td>\n",
              "      <td>8090</td>\n",
              "      <td>8153</td>\n",
              "      <td>8153</td>\n",
              "      <td>8153</td>\n",
              "      <td>8153</td>\n",
              "      <td>8153</td>\n",
              "      <td>8493</td>\n",
              "      <td>...</td>\n",
              "      <td>8891</td>\n",
              "      <td>8891</td>\n",
              "      <td>8526</td>\n",
              "      <td>8526</td>\n",
              "      <td>8629</td>\n",
              "      <td>9380</td>\n",
              "      <td>9192</td>\n",
              "      <td>9190</td>\n",
              "      <td>9190</td>\n",
              "      <td>9215</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>경기</td>\n",
              "      <td>10855</td>\n",
              "      <td>10855</td>\n",
              "      <td>10791</td>\n",
              "      <td>10784</td>\n",
              "      <td>10876</td>\n",
              "      <td>10646</td>\n",
              "      <td>10266</td>\n",
              "      <td>10124</td>\n",
              "      <td>10134</td>\n",
              "      <td>...</td>\n",
              "      <td>10356</td>\n",
              "      <td>10379</td>\n",
              "      <td>10391</td>\n",
              "      <td>10355</td>\n",
              "      <td>10469</td>\n",
              "      <td>10684</td>\n",
              "      <td>10685</td>\n",
              "      <td>10573</td>\n",
              "      <td>10518</td>\n",
              "      <td>10573</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>세종</td>\n",
              "      <td>7601</td>\n",
              "      <td>7600</td>\n",
              "      <td>7532</td>\n",
              "      <td>7814</td>\n",
              "      <td>7908</td>\n",
              "      <td>7934</td>\n",
              "      <td>8067</td>\n",
              "      <td>8067</td>\n",
              "      <td>8141</td>\n",
              "      <td>...</td>\n",
              "      <td>8592</td>\n",
              "      <td>8560</td>\n",
              "      <td>8560</td>\n",
              "      <td>8560</td>\n",
              "      <td>8555</td>\n",
              "      <td>8546</td>\n",
              "      <td>8546</td>\n",
              "      <td>8671</td>\n",
              "      <td>8669</td>\n",
              "      <td>8695</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>강원</td>\n",
              "      <td>6230</td>\n",
              "      <td>6230</td>\n",
              "      <td>6230</td>\n",
              "      <td>6141</td>\n",
              "      <td>6373</td>\n",
              "      <td>6350</td>\n",
              "      <td>6350</td>\n",
              "      <td>6268</td>\n",
              "      <td>6268</td>\n",
              "      <td>...</td>\n",
              "      <td>6365</td>\n",
              "      <td>6365</td>\n",
              "      <td>6348</td>\n",
              "      <td>6350</td>\n",
              "      <td>6182</td>\n",
              "      <td>6924</td>\n",
              "      <td>6846</td>\n",
              "      <td>6986</td>\n",
              "      <td>7019</td>\n",
              "      <td>7008</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>충북</td>\n",
              "      <td>6589</td>\n",
              "      <td>6589</td>\n",
              "      <td>6611</td>\n",
              "      <td>6625</td>\n",
              "      <td>6678</td>\n",
              "      <td>6598</td>\n",
              "      <td>6587</td>\n",
              "      <td>6586</td>\n",
              "      <td>6586</td>\n",
              "      <td>...</td>\n",
              "      <td>6724</td>\n",
              "      <td>6743</td>\n",
              "      <td>6749</td>\n",
              "      <td>6747</td>\n",
              "      <td>6783</td>\n",
              "      <td>6790</td>\n",
              "      <td>6805</td>\n",
              "      <td>6682</td>\n",
              "      <td>6601</td>\n",
              "      <td>6603</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>충남</td>\n",
              "      <td>6365</td>\n",
              "      <td>6365</td>\n",
              "      <td>6379</td>\n",
              "      <td>6287</td>\n",
              "      <td>6552</td>\n",
              "      <td>6591</td>\n",
              "      <td>6644</td>\n",
              "      <td>6805</td>\n",
              "      <td>6914</td>\n",
              "      <td>...</td>\n",
              "      <td>6940</td>\n",
              "      <td>6989</td>\n",
              "      <td>6976</td>\n",
              "      <td>6980</td>\n",
              "      <td>7161</td>\n",
              "      <td>7017</td>\n",
              "      <td>6975</td>\n",
              "      <td>6939</td>\n",
              "      <td>6935</td>\n",
              "      <td>6942</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>전북</td>\n",
              "      <td>6282</td>\n",
              "      <td>6281</td>\n",
              "      <td>5946</td>\n",
              "      <td>5966</td>\n",
              "      <td>6277</td>\n",
              "      <td>6306</td>\n",
              "      <td>6351</td>\n",
              "      <td>6319</td>\n",
              "      <td>6436</td>\n",
              "      <td>...</td>\n",
              "      <td>6583</td>\n",
              "      <td>6583</td>\n",
              "      <td>6583</td>\n",
              "      <td>6583</td>\n",
              "      <td>6542</td>\n",
              "      <td>6551</td>\n",
              "      <td>6556</td>\n",
              "      <td>6601</td>\n",
              "      <td>6750</td>\n",
              "      <td>6580</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>전남</td>\n",
              "      <td>5678</td>\n",
              "      <td>5678</td>\n",
              "      <td>5678</td>\n",
              "      <td>5696</td>\n",
              "      <td>5736</td>\n",
              "      <td>5656</td>\n",
              "      <td>5609</td>\n",
              "      <td>5780</td>\n",
              "      <td>5685</td>\n",
              "      <td>...</td>\n",
              "      <td>5768</td>\n",
              "      <td>5784</td>\n",
              "      <td>5784</td>\n",
              "      <td>5833</td>\n",
              "      <td>5825</td>\n",
              "      <td>5940</td>\n",
              "      <td>6050</td>\n",
              "      <td>6243</td>\n",
              "      <td>6286</td>\n",
              "      <td>6289</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>경북</td>\n",
              "      <td>6168</td>\n",
              "      <td>6168</td>\n",
              "      <td>6234</td>\n",
              "      <td>6317</td>\n",
              "      <td>6412</td>\n",
              "      <td>6409</td>\n",
              "      <td>6554</td>\n",
              "      <td>6556</td>\n",
              "      <td>6563</td>\n",
              "      <td>...</td>\n",
              "      <td>6881</td>\n",
              "      <td>6989</td>\n",
              "      <td>6992</td>\n",
              "      <td>6953</td>\n",
              "      <td>6997</td>\n",
              "      <td>7006</td>\n",
              "      <td>6966</td>\n",
              "      <td>6887</td>\n",
              "      <td>7035</td>\n",
              "      <td>7037</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>경남</td>\n",
              "      <td>6473</td>\n",
              "      <td>6485</td>\n",
              "      <td>6502</td>\n",
              "      <td>6610</td>\n",
              "      <td>6599</td>\n",
              "      <td>6610</td>\n",
              "      <td>6615</td>\n",
              "      <td>6613</td>\n",
              "      <td>6606</td>\n",
              "      <td>...</td>\n",
              "      <td>7125</td>\n",
              "      <td>7332</td>\n",
              "      <td>7592</td>\n",
              "      <td>7588</td>\n",
              "      <td>7668</td>\n",
              "      <td>7683</td>\n",
              "      <td>7717</td>\n",
              "      <td>7715</td>\n",
              "      <td>7723</td>\n",
              "      <td>7665</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>제주</td>\n",
              "      <td>7674</td>\n",
              "      <td>7900</td>\n",
              "      <td>7900</td>\n",
              "      <td>7900</td>\n",
              "      <td>7900</td>\n",
              "      <td>7900</td>\n",
              "      <td>7914</td>\n",
              "      <td>7914</td>\n",
              "      <td>7914</td>\n",
              "      <td>...</td>\n",
              "      <td>7724</td>\n",
              "      <td>7739</td>\n",
              "      <td>7739</td>\n",
              "      <td>7739</td>\n",
              "      <td>7826</td>\n",
              "      <td>7285</td>\n",
              "      <td>7285</td>\n",
              "      <td>7343</td>\n",
              "      <td>7343</td>\n",
              "      <td>7343</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>17 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9588259-b3dd-4a14-8bca-8af411a09f1c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e9588259-b3dd-4a14-8bca-8af411a09f1c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e9588259-b3dd-4a14-8bca-8af411a09f1c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2547a28f-2262-4498-a008-ddacfaae3e94\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2547a28f-2262-4498-a008-ddacfaae3e94')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2547a28f-2262-4498-a008-ddacfaae3e94 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# df_first 변수에 담긴 데이터프레임을 head로 미리보기 합니다.\n",
        "\n",
        "df_first.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 377
        },
        "id": "v2a-oa1enyn9",
        "outputId": "0a270c17-f606-48e5-c4bb-ac7aa52f397a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   지역  2013년12월  2014년1월  2014년2월  2014년3월  2014년4월  2014년5월  2014년6월  \\\n",
              "0  서울     18189    17925    17925    18016    18098    19446    18867   \n",
              "1  부산      8111     8111     9078     8965     9402     9501     9453   \n",
              "2  대구      8080     8080     8077     8101     8267     8274     8360   \n",
              "3  인천     10204    10204    10408    10408    10000     9844    10058   \n",
              "4  광주      6098     7326     7611     7346     7346     7523     7659   \n",
              "\n",
              "   2014년7월  2014년8월  ...  2014년11월  2014년12월  2015년1월  2015년2월  2015년3월  \\\n",
              "0    18742    19274  ...     20242     20269    20670    20670    19415   \n",
              "1     9457     9411  ...      9208      9208     9204     9235     9279   \n",
              "2     8360     8370  ...      8439      8253     8327     8416     8441   \n",
              "3     9974     9973  ...     10020     10020    10017     9876     9876   \n",
              "4     7612     7622  ...      7752      7748     7752     7756     7861   \n",
              "\n",
              "   2015년4월  2015년5월  2015년6월  2015년7월  2015년8월  \n",
              "0    18842    18367    18374    18152    18443  \n",
              "1     9327     9345     9515     9559     9581  \n",
              "2     8446     8568     8542     8542     8795  \n",
              "3     9938    10551    10443    10443    10449  \n",
              "4     7914     7877     7881     8089     8231  \n",
              "\n",
              "[5 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0952dbde-4927-4afd-866a-2593e79a26cf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>지역</th>\n",
              "      <th>2013년12월</th>\n",
              "      <th>2014년1월</th>\n",
              "      <th>2014년2월</th>\n",
              "      <th>2014년3월</th>\n",
              "      <th>2014년4월</th>\n",
              "      <th>2014년5월</th>\n",
              "      <th>2014년6월</th>\n",
              "      <th>2014년7월</th>\n",
              "      <th>2014년8월</th>\n",
              "      <th>...</th>\n",
              "      <th>2014년11월</th>\n",
              "      <th>2014년12월</th>\n",
              "      <th>2015년1월</th>\n",
              "      <th>2015년2월</th>\n",
              "      <th>2015년3월</th>\n",
              "      <th>2015년4월</th>\n",
              "      <th>2015년5월</th>\n",
              "      <th>2015년6월</th>\n",
              "      <th>2015년7월</th>\n",
              "      <th>2015년8월</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>서울</td>\n",
              "      <td>18189</td>\n",
              "      <td>17925</td>\n",
              "      <td>17925</td>\n",
              "      <td>18016</td>\n",
              "      <td>18098</td>\n",
              "      <td>19446</td>\n",
              "      <td>18867</td>\n",
              "      <td>18742</td>\n",
              "      <td>19274</td>\n",
              "      <td>...</td>\n",
              "      <td>20242</td>\n",
              "      <td>20269</td>\n",
              "      <td>20670</td>\n",
              "      <td>20670</td>\n",
              "      <td>19415</td>\n",
              "      <td>18842</td>\n",
              "      <td>18367</td>\n",
              "      <td>18374</td>\n",
              "      <td>18152</td>\n",
              "      <td>18443</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>부산</td>\n",
              "      <td>8111</td>\n",
              "      <td>8111</td>\n",
              "      <td>9078</td>\n",
              "      <td>8965</td>\n",
              "      <td>9402</td>\n",
              "      <td>9501</td>\n",
              "      <td>9453</td>\n",
              "      <td>9457</td>\n",
              "      <td>9411</td>\n",
              "      <td>...</td>\n",
              "      <td>9208</td>\n",
              "      <td>9208</td>\n",
              "      <td>9204</td>\n",
              "      <td>9235</td>\n",
              "      <td>9279</td>\n",
              "      <td>9327</td>\n",
              "      <td>9345</td>\n",
              "      <td>9515</td>\n",
              "      <td>9559</td>\n",
              "      <td>9581</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>대구</td>\n",
              "      <td>8080</td>\n",
              "      <td>8080</td>\n",
              "      <td>8077</td>\n",
              "      <td>8101</td>\n",
              "      <td>8267</td>\n",
              "      <td>8274</td>\n",
              "      <td>8360</td>\n",
              "      <td>8360</td>\n",
              "      <td>8370</td>\n",
              "      <td>...</td>\n",
              "      <td>8439</td>\n",
              "      <td>8253</td>\n",
              "      <td>8327</td>\n",
              "      <td>8416</td>\n",
              "      <td>8441</td>\n",
              "      <td>8446</td>\n",
              "      <td>8568</td>\n",
              "      <td>8542</td>\n",
              "      <td>8542</td>\n",
              "      <td>8795</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>인천</td>\n",
              "      <td>10204</td>\n",
              "      <td>10204</td>\n",
              "      <td>10408</td>\n",
              "      <td>10408</td>\n",
              "      <td>10000</td>\n",
              "      <td>9844</td>\n",
              "      <td>10058</td>\n",
              "      <td>9974</td>\n",
              "      <td>9973</td>\n",
              "      <td>...</td>\n",
              "      <td>10020</td>\n",
              "      <td>10020</td>\n",
              "      <td>10017</td>\n",
              "      <td>9876</td>\n",
              "      <td>9876</td>\n",
              "      <td>9938</td>\n",
              "      <td>10551</td>\n",
              "      <td>10443</td>\n",
              "      <td>10443</td>\n",
              "      <td>10449</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>광주</td>\n",
              "      <td>6098</td>\n",
              "      <td>7326</td>\n",
              "      <td>7611</td>\n",
              "      <td>7346</td>\n",
              "      <td>7346</td>\n",
              "      <td>7523</td>\n",
              "      <td>7659</td>\n",
              "      <td>7612</td>\n",
              "      <td>7622</td>\n",
              "      <td>...</td>\n",
              "      <td>7752</td>\n",
              "      <td>7748</td>\n",
              "      <td>7752</td>\n",
              "      <td>7756</td>\n",
              "      <td>7861</td>\n",
              "      <td>7914</td>\n",
              "      <td>7877</td>\n",
              "      <td>7881</td>\n",
              "      <td>8089</td>\n",
              "      <td>8231</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0952dbde-4927-4afd-866a-2593e79a26cf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0952dbde-4927-4afd-866a-2593e79a26cf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0952dbde-4927-4afd-866a-2593e79a26cf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-80c635aa-173a-4015-882c-4c397ac163a8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-80c635aa-173a-4015-882c-4c397ac163a8')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-80c635aa-173a-4015-882c-4c397ac163a8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# df_first 변수에 담긴 데이터프레임을 tail로 미리보기 합니다.\n",
        "\n",
        "df_first.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 377
        },
        "id": "gYdazVJTn_bF",
        "outputId": "de46e0eb-5389-4e99-e135-80e3b1c7f968"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    지역  2013년12월  2014년1월  2014년2월  2014년3월  2014년4월  2014년5월  2014년6월  \\\n",
              "12  전북      6282     6281     5946     5966     6277     6306     6351   \n",
              "13  전남      5678     5678     5678     5696     5736     5656     5609   \n",
              "14  경북      6168     6168     6234     6317     6412     6409     6554   \n",
              "15  경남      6473     6485     6502     6610     6599     6610     6615   \n",
              "16  제주      7674     7900     7900     7900     7900     7900     7914   \n",
              "\n",
              "    2014년7월  2014년8월  ...  2014년11월  2014년12월  2015년1월  2015년2월  2015년3월  \\\n",
              "12     6319     6436  ...      6583      6583     6583     6583     6542   \n",
              "13     5780     5685  ...      5768      5784     5784     5833     5825   \n",
              "14     6556     6563  ...      6881      6989     6992     6953     6997   \n",
              "15     6613     6606  ...      7125      7332     7592     7588     7668   \n",
              "16     7914     7914  ...      7724      7739     7739     7739     7826   \n",
              "\n",
              "    2015년4월  2015년5월  2015년6월  2015년7월  2015년8월  \n",
              "12     6551     6556     6601     6750     6580  \n",
              "13     5940     6050     6243     6286     6289  \n",
              "14     7006     6966     6887     7035     7037  \n",
              "15     7683     7717     7715     7723     7665  \n",
              "16     7285     7285     7343     7343     7343  \n",
              "\n",
              "[5 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-76dc4237-10b5-448a-a658-26151c1c51ba\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>지역</th>\n",
              "      <th>2013년12월</th>\n",
              "      <th>2014년1월</th>\n",
              "      <th>2014년2월</th>\n",
              "      <th>2014년3월</th>\n",
              "      <th>2014년4월</th>\n",
              "      <th>2014년5월</th>\n",
              "      <th>2014년6월</th>\n",
              "      <th>2014년7월</th>\n",
              "      <th>2014년8월</th>\n",
              "      <th>...</th>\n",
              "      <th>2014년11월</th>\n",
              "      <th>2014년12월</th>\n",
              "      <th>2015년1월</th>\n",
              "      <th>2015년2월</th>\n",
              "      <th>2015년3월</th>\n",
              "      <th>2015년4월</th>\n",
              "      <th>2015년5월</th>\n",
              "      <th>2015년6월</th>\n",
              "      <th>2015년7월</th>\n",
              "      <th>2015년8월</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>전북</td>\n",
              "      <td>6282</td>\n",
              "      <td>6281</td>\n",
              "      <td>5946</td>\n",
              "      <td>5966</td>\n",
              "      <td>6277</td>\n",
              "      <td>6306</td>\n",
              "      <td>6351</td>\n",
              "      <td>6319</td>\n",
              "      <td>6436</td>\n",
              "      <td>...</td>\n",
              "      <td>6583</td>\n",
              "      <td>6583</td>\n",
              "      <td>6583</td>\n",
              "      <td>6583</td>\n",
              "      <td>6542</td>\n",
              "      <td>6551</td>\n",
              "      <td>6556</td>\n",
              "      <td>6601</td>\n",
              "      <td>6750</td>\n",
              "      <td>6580</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>전남</td>\n",
              "      <td>5678</td>\n",
              "      <td>5678</td>\n",
              "      <td>5678</td>\n",
              "      <td>5696</td>\n",
              "      <td>5736</td>\n",
              "      <td>5656</td>\n",
              "      <td>5609</td>\n",
              "      <td>5780</td>\n",
              "      <td>5685</td>\n",
              "      <td>...</td>\n",
              "      <td>5768</td>\n",
              "      <td>5784</td>\n",
              "      <td>5784</td>\n",
              "      <td>5833</td>\n",
              "      <td>5825</td>\n",
              "      <td>5940</td>\n",
              "      <td>6050</td>\n",
              "      <td>6243</td>\n",
              "      <td>6286</td>\n",
              "      <td>6289</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>경북</td>\n",
              "      <td>6168</td>\n",
              "      <td>6168</td>\n",
              "      <td>6234</td>\n",
              "      <td>6317</td>\n",
              "      <td>6412</td>\n",
              "      <td>6409</td>\n",
              "      <td>6554</td>\n",
              "      <td>6556</td>\n",
              "      <td>6563</td>\n",
              "      <td>...</td>\n",
              "      <td>6881</td>\n",
              "      <td>6989</td>\n",
              "      <td>6992</td>\n",
              "      <td>6953</td>\n",
              "      <td>6997</td>\n",
              "      <td>7006</td>\n",
              "      <td>6966</td>\n",
              "      <td>6887</td>\n",
              "      <td>7035</td>\n",
              "      <td>7037</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>경남</td>\n",
              "      <td>6473</td>\n",
              "      <td>6485</td>\n",
              "      <td>6502</td>\n",
              "      <td>6610</td>\n",
              "      <td>6599</td>\n",
              "      <td>6610</td>\n",
              "      <td>6615</td>\n",
              "      <td>6613</td>\n",
              "      <td>6606</td>\n",
              "      <td>...</td>\n",
              "      <td>7125</td>\n",
              "      <td>7332</td>\n",
              "      <td>7592</td>\n",
              "      <td>7588</td>\n",
              "      <td>7668</td>\n",
              "      <td>7683</td>\n",
              "      <td>7717</td>\n",
              "      <td>7715</td>\n",
              "      <td>7723</td>\n",
              "      <td>7665</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>제주</td>\n",
              "      <td>7674</td>\n",
              "      <td>7900</td>\n",
              "      <td>7900</td>\n",
              "      <td>7900</td>\n",
              "      <td>7900</td>\n",
              "      <td>7900</td>\n",
              "      <td>7914</td>\n",
              "      <td>7914</td>\n",
              "      <td>7914</td>\n",
              "      <td>...</td>\n",
              "      <td>7724</td>\n",
              "      <td>7739</td>\n",
              "      <td>7739</td>\n",
              "      <td>7739</td>\n",
              "      <td>7826</td>\n",
              "      <td>7285</td>\n",
              "      <td>7285</td>\n",
              "      <td>7343</td>\n",
              "      <td>7343</td>\n",
              "      <td>7343</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76dc4237-10b5-448a-a658-26151c1c51ba')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-76dc4237-10b5-448a-a658-26151c1c51ba button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-76dc4237-10b5-448a-a658-26151c1c51ba');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e2363985-1594-4532-bde3-530f44093b3c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e2363985-1594-4532-bde3-530f44093b3c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e2363985-1594-4532-bde3-530f44093b3c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 데이터 요약하기"
      ],
      "metadata": {
        "id": "P-lPZzz1oP9_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# object type 즉 문자열로 구성되어 있으므로, 숫자형으로 바꿀 필요가 있겠다는 생각이 듬\n",
        "# 결측치 때문에 Non-Null의 값이 컬럼마다 다르게 나옴 확인 가능\n",
        "# RangeIndex를 통해 0~4334번째의 인덱스 즉, 4335개의 인덱스가 존재함을 확인\n",
        "\n",
        "df_last.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z1hDMDsUoFzC",
        "outputId": "e584e837-7513-4e5e-c3d4-3bed638d76e0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 4335 entries, 0 to 4334\n",
            "Data columns (total 5 columns):\n",
            " #   Column   Non-Null Count  Dtype \n",
            "---  ------   --------------  ----- \n",
            " 0   지역명      4335 non-null   object\n",
            " 1   규모구분     4335 non-null   object\n",
            " 2   연도       4335 non-null   int64 \n",
            " 3   월        4335 non-null   int64 \n",
            " 4   분양가격(㎡)  4058 non-null   object\n",
            "dtypes: int64(2), object(3)\n",
            "memory usage: 169.5+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 결측치 보기"
      ],
      "metadata": {
        "id": "7R07qrBZpiiV"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "isnull 혹은 isna 를 통해 데이터가 비어있는지를 확인할 수 있습니다.\n",
        "결측치는 True로 표시되는데, True == 1 이기 때문에 이 값을 다 더해주면 결측치의 수가 됩니다."
      ],
      "metadata": {
        "id": "ztjzYWiPpivA"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Vnlmme1koYMg"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}